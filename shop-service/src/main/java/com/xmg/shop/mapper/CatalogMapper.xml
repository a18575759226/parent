<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xmg.shop.mapper.CatalogMapper">
    <resultMap id="BaseResultMap" type="com.xmg.shop.domain.Catalog">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="last_modified_date" jdbcType="TIMESTAMP" property="lastModifiedDate"/>
        <result column="version" jdbcType="INTEGER" property="version"/>
        <result column="level" jdbcType="INTEGER" property="level"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="code" jdbcType="VARCHAR" property="code"/>
        <result column="sequence" jdbcType="INTEGER" property="sequence"/>
        <result column="children_catalogs" jdbcType="INTEGER" property="childrenCatalogs"/>
        <result column="products" jdbcType="INTEGER" property="products"/>
        <result column="parent_catalog_id" jdbcType="BIGINT" property="parentCatalogId"/>
        <result column="is_parent" jdbcType="TINYINT" property="isParent"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from catalog
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" keyProperty="id" parameterType="com.xmg.shop.domain.Catalog" useGeneratedKeys="true">
    insert into catalog (create_date, last_modified_date,
      version, level, name,
      code, sequence, children_catalogs,
      products, parent_catalog_id, is_parent
      )
    values (#{createDate,jdbcType=TIMESTAMP}, #{lastModifiedDate,jdbcType=TIMESTAMP},
      #{version,jdbcType=INTEGER}, #{level,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
      #{code,jdbcType=VARCHAR}, #{sequence,jdbcType=INTEGER}, #{childrenCatalogs,jdbcType=INTEGER},
      #{products,jdbcType=INTEGER}, #{parentCatalogId,jdbcType=BIGINT}, #{isParent,jdbcType=TINYINT}
      )
  </insert>
    <update id="updateByPrimaryKey" parameterType="com.xmg.shop.domain.Catalog">
    update catalog
    set create_date = #{createDate,jdbcType=TIMESTAMP},
      last_modified_date = #{lastModifiedDate,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=INTEGER},
      level = #{level,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      sequence = #{sequence,jdbcType=INTEGER},
      children_catalogs = #{childrenCatalogs,jdbcType=INTEGER},
      products = #{products,jdbcType=INTEGER},
      parent_catalog_id = #{parentCatalogId,jdbcType=BIGINT},
      is_parent = #{isParent,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, create_date, last_modified_date, version, level, name, code, sequence,
    children_catalogs, products, parent_catalog_id, is_parent
    from catalog
    where id = #{id,jdbcType=BIGINT}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
    select id, create_date, last_modified_date, version, level, name, code, sequence,
    children_catalogs, products, parent_catalog_id, is_parent
    from catalog
  </select>
    <select id="getChildrenCatalogsById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select id, create_date, last_modified_date, version, level, name, code, sequence,
        children_catalogs, products, parent_catalog_id, is_parent
        from catalog
        <choose>
            <when test="parentId!=null">
                <where>
                    parent_catalog_id=#{parentId}
                </where>
            </when>
            <otherwise>
                <where>
                    parent_catalog_id is null
                </where>
            </otherwise>
        </choose>
    </select>
</mapper>